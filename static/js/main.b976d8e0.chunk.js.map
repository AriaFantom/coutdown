{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","days","setdays","hours","sethours","minutes","setminutes","seconds","setseconds","interval","useRef","useEffect","coutdown","Date","setInterval","now","getTime","distance","Days","Math","floor","Hours","Minutes","Seconds","startimer","clearInterval","current","className","id","class","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAkEeA,MA/Df,WACE,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,MAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA8BJ,mBAAS,MAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA8BN,mBAAS,MAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAEIC,EAAWC,mBA+Bf,OANAC,qBAAU,WAER,OAzBgB,WAChB,IAAMC,EAAW,IAAIC,KAAK,6BAE1BJ,EAAWK,aAAY,WACrB,IAAMC,GAAM,IAAIF,MAAOG,UACjBC,EAAWL,EAAWG,EAEtBG,EAAOC,KAAKC,MAAMH,EAAQ,OAC1BI,EAAQF,KAAKC,MAChBH,EAAQ,MAAT,MAEIK,EAAUH,KAAKC,MAAOH,EAAQ,KAAT,KACrBM,EAAUJ,KAAKC,MAAOH,EAAQ,IAAkB,KAElDA,EAAW,IAEbf,EAAQgB,GACRd,EAASiB,GACTf,EAAWgB,GACXd,EAAWe,MAEZ,KAGHC,GACO,WACLC,cAAchB,EAASiB,aAIzB,sBAAKC,UAAU,MAAf,UACE,oBAAIA,UAAU,UAAd,gDACA,sBAAKC,GAAG,WAAR,UACJ,gCACE,sBAAMC,MAAM,OAAZ,SAAoB5B,IACpB,qBAAK4B,MAAM,YAAX,qBAEF,gCACE,sBAAMA,MAAM,QAAZ,SAAqB1B,IACrB,qBAAK0B,MAAM,YAAX,sBAEF,gCACE,sBAAMA,MAAM,UAAZ,SAAuBxB,IACvB,qBAAKwB,MAAM,YAAX,wBAEF,gCACE,sBAAMA,MAAM,UAAZ,SAAuBtB,IACvB,qBAAKsB,MAAM,YAAX,+BC9CWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.b976d8e0.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useState, useEffect, useRef } from \"react\";\n\nfunction App() {\n  const [days, setdays] = useState(\"00\");\n  const [hours, sethours] = useState(\"00\");\n  const [minutes, setminutes] = useState(\"00\");\n  const [seconds, setseconds] = useState(\"00\");\n\n  let interval = useRef();\n\n  const startimer = () => {\n    const coutdown = new Date(\"October 13, 2021 00:00:00\");\n\n    interval = setInterval(() => {\n      const now = new Date().getTime();\n      const distance = coutdown - now;\n\n      const Days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      const Hours = Math.floor(\n        (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n      );\n      const Minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n      const Seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n      if (distance < 0) {\n      } else {\n        setdays(Days);\n        sethours(Hours);\n        setminutes(Minutes);\n        setseconds(Seconds);\n      }\n    }, 1000);\n  };\n  useEffect(() => {\n    startimer();\n    return () => {\n      clearInterval(interval.current);\n    };\n  });\n  return (\n    <div className=\"App\">\n      <h1 className=\"heading\">Sugary Cupcake's Birthday Coutdown</h1>\n      <div id=\"clockdiv\">\n  <div>\n    <span class=\"days\">{days}</span>\n    <div class=\"smalltext\">Days</div>\n  </div>\n  <div>\n    <span class=\"hours\">{hours}</span>\n    <div class=\"smalltext\">Hours</div>\n  </div>\n  <div>\n    <span class=\"minutes\">{minutes}</span>\n    <div class=\"smalltext\">Minutes</div>\n  </div>\n  <div>\n    <span class=\"seconds\">{seconds}</span>\n    <div class=\"smalltext\">Seconds</div>\n  </div>\n</div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}